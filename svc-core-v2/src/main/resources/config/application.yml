server:
  port: ${MARS_CORE_PORT:11200}

dump:
  datasource:
    host: ${DS_HOST:localhost}
    port: ${DS_PORT:5432}
    domain: ${dump.datasource.host}:${dump.datasource.port}
    database: ${MARS_CORE_DATABASE:mars-core}
    schema: ${MARS_CORE_SCHEMA:mars-core}

spring:
  application:
    name: mars-core
  jackson:
    default-property-inclusion: non_null
  flyway:
    create-schemas: true
    table: core_schema_history
    default-schema: ${dump.datasource.schema}
  datasource:
    url: jdbc:postgresql://${dump.datasource.domain}/${dump.datasource.database}
    type: com.zaxxer.hikari.HikariDataSource
    username: ${DS_USERNAME:postgres}
    password: ${DS_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: ${dump.datasource.schema}
      pool-name: ${spring.application.name}
  jpa:
    database: postgresql
    generate-ddl: false
    show-sql: ${JPA_SHOW_SQL:false}
    open-in-view: ${JPA_OPEN_IN_VIEW:false}
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  task:
    scheduling:
      pool:
        size: ${ASYNC_CORE_POOL_SIZE:5}
      shutdown:
        await-termination: true
        await-termination-period: 30s
    execution:
      pool:
        queue-capacity: ${ASYNC_MAX_QUEUE:1000}
        core-size: ${ASYNC_CORE_POOL_SIZE:5}
        max-size: ${ASYNC_MAX_POOL_SIZE:20}
        keep-alive: 20s
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI:https://auth.scaraz.dev/realms/mars}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

mars:
  secret: ${JWT_SECRET}
  cors:
    max-age: 3600
    allowed-origins: ${ALLOWED_ORIGINS:http://localhost:10220}
    allowed-headers: "*"
    allowed-methods: GET, POST, PUT, DELETE, OPTIONS
    allow-credentials: on
    exposed-headers: Tc-Count, X-Total-Count, X-Sort, filename
  directory:
    tmp: ${MARS_TMP_DIRECTORY:D:/TMP/mars}
    shared: ${MARS_SHARED_DIRECTORY:D:/TMP/mars}
